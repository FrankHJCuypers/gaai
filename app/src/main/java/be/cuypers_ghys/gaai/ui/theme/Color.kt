/*
 * Project Gaai: one app to control the Nexxtender chargers.
 * Copyright Â© 2024-2025, Frank HJ Cuypers
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Affero General Public License as published by the Free Software Foundation,
 * either version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License along with this program.
 * If not, see <http://www.gnu.org/licenses/>.
 */

package be.cuypers_ghys.gaai.ui.theme

import androidx.compose.ui.graphics.Color

// Colors generated with https://material-foundation.github.io/material-theme-builder/ based on colors of the
// ic_launcher_round resource
val primaryLight = Color(0xFF5800C4)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF7402FF)
val onPrimaryContainerLight = Color(0xFFE0CFFF)
val secondaryLight = Color(0xFF6C49B4)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFB08DFD)
val onSecondaryContainerLight = Color(0xFF441B8B)
val tertiaryLight = Color(0xFF820074)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFAB0098)
val onTertiaryContainerLight = Color(0xFFFFC6EC)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF93000A)
val backgroundLight = Color(0xFFFEF7FF)
val onBackgroundLight = Color(0xFF1E1A25)
val surfaceLight = Color(0xFFFEF7FF)
val onSurfaceLight = Color(0xFF1E1A25)
val surfaceVariantLight = Color(0xFFE9DEF6)
val onSurfaceVariantLight = Color(0xFF4A4457)
val outlineLight = Color(0xFF7B7489)
val outlineVariantLight = Color(0xFFCCC2DA)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF332E3B)
val inverseOnSurfaceLight = Color(0xFFF6EDFF)
val inversePrimaryLight = Color(0xFFD2BCFF)
val surfaceDimLight = Color(0xFFDFD7E8)
val surfaceBrightLight = Color(0xFFFEF7FF)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFF9F1FF)
val surfaceContainerLight = Color(0xFFF3EBFC)
val surfaceContainerHighLight = Color(0xFFEEE5F6)
val surfaceContainerHighestLight = Color(0xFFE8DFF0)

val primaryLightMediumContrast = Color(0xFF45009D)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF7402FF)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF421989)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF7B58C5)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF68005C)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFFAB0098)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF740006)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFCF2C27)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFEF7FF)
val onBackgroundLightMediumContrast = Color(0xFF1E1A25)
val surfaceLightMediumContrast = Color(0xFFFEF7FF)
val onSurfaceLightMediumContrast = Color(0xFF130F1B)
val surfaceVariantLightMediumContrast = Color(0xFFE9DEF6)
val onSurfaceVariantLightMediumContrast = Color(0xFF393345)
val outlineLightMediumContrast = Color(0xFF564F63)
val outlineVariantLightMediumContrast = Color(0xFF716A7E)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF332E3B)
val inverseOnSurfaceLightMediumContrast = Color(0xFFF6EDFF)
val inversePrimaryLightMediumContrast = Color(0xFFD2BCFF)
val surfaceDimLightMediumContrast = Color(0xFFCBC3D4)
val surfaceBrightLightMediumContrast = Color(0xFFFEF7FF)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFF9F1FF)
val surfaceContainerLightMediumContrast = Color(0xFFEEE5F6)
val surfaceContainerHighLightMediumContrast = Color(0xFFE2DAEA)
val surfaceContainerHighestLightMediumContrast = Color(0xFFD7CEDF)

val primaryLightHighContrast = Color(0xFF390084)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF5C00CD)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF38067F)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF56319D)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF56004C)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF890079)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF600004)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF98000A)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFEF7FF)
val onBackgroundLightHighContrast = Color(0xFF1E1A25)
val surfaceLightHighContrast = Color(0xFFFEF7FF)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFE9DEF6)
val onSurfaceVariantLightHighContrast = Color(0xFF000000)
val outlineLightHighContrast = Color(0xFF2F293B)
val outlineVariantLightHighContrast = Color(0xFF4D4659)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF332E3B)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFD2BCFF)
val surfaceDimLightHighContrast = Color(0xFFBDB6C6)
val surfaceBrightLightHighContrast = Color(0xFFFEF7FF)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF6EDFF)
val surfaceContainerLightHighContrast = Color(0xFFE8DFF0)
val surfaceContainerHighLightHighContrast = Color(0xFFD9D1E2)
val surfaceContainerHighestLightHighContrast = Color(0xFFCBC3D4)

val primaryDark = Color(0xFFD2BCFF)
val onPrimaryDark = Color(0xFF3E008F)
val primaryContainerDark = Color(0xFF7402FF)
val onPrimaryContainerDark = Color(0xFFE0CFFF)
val secondaryDark = Color(0xFFD2BCFF)
val onSecondaryDark = Color(0xFF3C1084)
val secondaryContainerDark = Color(0xFF56319D)
val onSecondaryContainerDark = Color(0xFFC5AAFF)
val tertiaryDark = Color(0xFFFFACE7)
val onTertiaryDark = Color(0xFF5E0053)
val tertiaryContainerDark = Color(0xFFAB0098)
val onTertiaryContainerDark = Color(0xFFFFC6EC)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF15111D)
val onBackgroundDark = Color(0xFFE8DFF0)
val surfaceDark = Color(0xFF15111D)
val onSurfaceDark = Color(0xFFE8DFF0)
val surfaceVariantDark = Color(0xFF4A4457)
val onSurfaceVariantDark = Color(0xFFCCC2DA)
val outlineDark = Color(0xFF968DA3)
val outlineVariantDark = Color(0xFF4A4457)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE8DFF0)
val inverseOnSurfaceDark = Color(0xFF332E3B)
val inversePrimaryDark = Color(0xFF750BFF)
val surfaceDimDark = Color(0xFF15111D)
val surfaceBrightDark = Color(0xFF3C3744)
val surfaceContainerLowestDark = Color(0xFF100C17)
val surfaceContainerLowDark = Color(0xFF1E1A25)
val surfaceContainerDark = Color(0xFF221E2A)
val surfaceContainerHighDark = Color(0xFF2C2834)
val surfaceContainerHighestDark = Color(0xFF37333F)

val primaryDarkMediumContrast = Color(0xFFE5D6FF)
val onPrimaryDarkMediumContrast = Color(0xFF310074)
val primaryContainerDarkMediumContrast = Color(0xFFA377FF)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFE5D6FF)
val onSecondaryDarkMediumContrast = Color(0xFF310074)
val secondaryContainerDarkMediumContrast = Color(0xFFA07DEC)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFFFCEEE)
val onTertiaryDarkMediumContrast = Color(0xFF4B0042)
val tertiaryContainerDarkMediumContrast = Color(0xFFEC50D1)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFD2CC)
val onErrorDarkMediumContrast = Color(0xFF540003)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF15111D)
val onBackgroundDarkMediumContrast = Color(0xFFE8DFF0)
val surfaceDarkMediumContrast = Color(0xFF15111D)
val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkMediumContrast = Color(0xFF4A4457)
val onSurfaceVariantDarkMediumContrast = Color(0xFFE2D8F0)
val outlineDarkMediumContrast = Color(0xFFB7AEC5)
val outlineVariantDarkMediumContrast = Color(0xFF958DA2)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFE8DFF0)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF2C2834)
val inversePrimaryDarkMediumContrast = Color(0xFF5A00CA)
val surfaceDimDarkMediumContrast = Color(0xFF15111D)
val surfaceBrightDarkMediumContrast = Color(0xFF47424F)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF090610)
val surfaceContainerLowDarkMediumContrast = Color(0xFF201C27)
val surfaceContainerDarkMediumContrast = Color(0xFF2A2632)
val surfaceContainerHighDarkMediumContrast = Color(0xFF35303D)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF403B48)

val primaryDarkHighContrast = Color(0xFFF6ECFF)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFCEB7FF)
val onPrimaryContainerDarkHighContrast = Color(0xFF110031)
val secondaryDarkHighContrast = Color(0xFFF6ECFF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFCEB7FF)
val onSecondaryContainerDarkHighContrast = Color(0xFF110031)
val tertiaryDarkHighContrast = Color(0xFFFFEBF5)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFFFA6E7)
val onTertiaryContainerDarkHighContrast = Color(0xFF1E0019)
val errorDarkHighContrast = Color(0xFFFFECE9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFAEA4)
val onErrorContainerDarkHighContrast = Color(0xFF220001)
val backgroundDarkHighContrast = Color(0xFF15111D)
val onBackgroundDarkHighContrast = Color(0xFFE8DFF0)
val surfaceDarkHighContrast = Color(0xFF15111D)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF4A4457)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
val outlineDarkHighContrast = Color(0xFFF6ECFF)
val outlineVariantDarkHighContrast = Color(0xFFC8BFD6)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFE8DFF0)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF5A00CA)
val surfaceDimDarkHighContrast = Color(0xFF15111D)
val surfaceBrightDarkHighContrast = Color(0xFF534E5B)
val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
val surfaceContainerLowDarkHighContrast = Color(0xFF221E2A)
val surfaceContainerDarkHighContrast = Color(0xFF332E3B)
val surfaceContainerHighDarkHighContrast = Color(0xFF3E3946)
val surfaceContainerHighestDarkHighContrast = Color(0xFF4A4452)


val RedA400 = Color(0xFFFF1744)