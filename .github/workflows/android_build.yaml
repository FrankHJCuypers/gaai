name: Android CI

on:
  push:
    branches:
      - master
      - 'feature/**'
  pull_request:
    branches:
      - master
      - 'feature/**'
  workflow_dispatch:

permissions:
  checks: write # required by PavanMudigonda/jacoco-reporter@v5.0

env:
  # The name of the keystore file
  keystoreFileName: 'keystore/gaai-release.keystore'

  # The name of the main module repository
  main_project_module: app

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Decodes Github secret ${{ secrets.SIGNING_STORE_FILE }} to the file ${{ env.keystoreFileName }}
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: ${{ env.keystoreFileName }}
          encodedString: ${{ secrets.SIGNING_STORE_FILE }}

      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'adopt'
          # next line commented out because of //https://github.com/gradle/actions/blob/v3.4.2/docs/setup-gradle.md#incompatibility-with-other-caching-mechanisms
          # cache: gradle

      # Make gradlew executable.
      # Also make sure that git ignores permission changes. Otherwise workspace is considered dirty.
      - name: Grant execute permission for gradlew
        run: |
          chmod +x gradlew
          git config core.filemode false

      - name: Build with Gradle
        run: ./gradlew build createDebugCoverageReport
        env:
          SIGNING_STORE_FILE: ${{ steps.decode_keystore.outputs.filePath }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "app/build/test-results/**/TEST-*.xml"
          show: "all"
        if: always()

      # generates coverage-report.md and publishes as checkrun.
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path:  ${{ env.main_project_module }}/build/reports/coverage/test/debug/report.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 80
          fail_below_threshold: false
          publish_only_summary: false

      # Publish Coverage Job Summary  # Optional
      - name: Add Jacoco report to workflow run summary
        run: |
          echo "| Outcome | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Coverage % | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :x: Number of Lines Missed | ${{ steps.jacoco_reporter.outputs.missed_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Number of Lines | ${{ steps.jacoco_reporter.outputs.total_lines }} |" >> $GITHUB_STEP_SUMMARY

      # uploads the coverage-report.md artifact  # Optional
      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-markdown
          path: "*/coverage-results.md"

      # Upload Artifact Build
      - name: Upload APK Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: Gaai APK(s) release generated
          path: ${{ env.main_project_module }}/build/outputs/apk/release/*.apk